http://www.js-core.ru/logo.png

js-core allows to organize chains of calls to provide easier and more consistent way for working with DOM in JavaScript.

==Append `<script>` to `<head>`==
{{{
<script type="text/javascript" src="js-core-2.5.9.js"></script>
}}}

==Framework structure==
{{{
// fundamental methods
var core = {
  ie: …,
  …
};

function _$(arg) {
  this.node = typeof arg == 'string' ? document.getElementById(arg) : arg;
}

// basic methods
_$.prototype = {
  parent: function() {
    return new _$(this.node.parentNode);
  },
  child: function(…) {
    …
  },
  html: function(…) {
    …
  },
  …
};

function $(arg) {
  return new _$(arg);
}

// additional methods
$.ready = function(fn) {
  …
};
}}}

==Waiting for `DOMContentLoaded`==
{{{
$.ready(function() {
  // your code
});
}}}

==Get element by id==
{{{
$('element-id') // return {node: HTMLElement}
}}}
==Using chains==
{{{
$('element-id')      // get element by id
  .parent()          // get parent node
  .append('p')       // append new HTMLParagraphElement
  .addClass('entry') // add CSS-class "entry"
}}}
==Context link==
{{{
$('element-id')     // this → HTMLElement with id="elements-id"
  .append('p')      // this → HTMLParagraphElement
  .prev('div')      // this → HTMLDivElement
  .prepend('span'); // this → HTMLSpanElement

$.n('div')                  // this → HTMLDivElement
  .appendTo('elements-id'); // this → HTMLElement with id="elements-id"

$('element-id').run(function(arg1, arg2) {
  // this → HTMLElement with id="elements-id"
}, [arg1, arg2]);
}}}
