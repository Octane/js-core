• Переименован следующие методы:
	· children → descendants
	· child → children

• Удален метод isNumber
• Глобальный объект «core» теперь называется «Core»
• Свойство core.ie теперь доступно, как Core.IE 
• Имя приватных свойств и методов теперь будет называться со знака подчеркивания «_»
• Метод Core.n(…) переименован в Core.create(…)
• Оптимизировано использование памяти при использовании Core.parse(…)
• Удалент метод Core.insert(…)
• Методы Core(…).insertBefore(…) и Core(…).insertAfter(…) теперь продолжают
  цепочку аналогично Core(…).appendTo(…) и Core(…).prependTo(…)
• Метод Core.bind(…) переименован в Core.observe(…)
• Метод Core.unbind(…) переименован в Core.stopObserve(…)

[planned]

• Расширить функциональность метода exist:
	$(…).exist("method" [, arguments]);

• Добавить возможность контролировать, что изменять свойство или атрибут DOM-элемента.
  Необходимо, например для решения поблем, когда в IE нужно задавать значения атрибутов
  name, type, enctype и action именно через setAttribute.

• Добавить fix для удаления свойст DOM-элементов в IE:
	function removeProperty(node, prop) {
		if(ie && node.nodeType) {
			node.removeAttribute(prop);
		} else {
			delete node[prop];
		}
	} 
  Чтобы решить проблему:
		var node = document.createElement("div");
		node.prop = 1;

		// 1-й способ:
		delete node.prop; // вызовет ошибку в IE6,7

		// 2-й способ не решает проблему с оператором in:
		node.prop = undefined;
		alert("prop" in node); // true

		// 3-й способ использует тот факт, что в IE
		// упрощена модель работы со свойствами и атрибутами:
		node.removeAttribute("prop");
		alert("prop" in node); // false в IE

• Оптимизировать работу метода «css» (получать compudetStyle один раз для каждого элемента).
• Добавить кросс-браузерную реализацию dataset:
	http://www.w3.org/TR/html5/dom.html#embedding-custom-non-visible-data
• Добавить метод, преобразующий Core в Core.list